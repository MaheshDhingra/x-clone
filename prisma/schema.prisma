generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id          String    @id @default(uuid())
  clerkUserId String    @unique
  username    String    @unique
  email       String?   @unique 
  name        String?   
  imageUrl    String?   
  tweets      Tweet[]
  comments    Comment[]
  likes       Like[]
  followers   Follow[]  @relation("Follower")
  following   Follow[]  @relation("Following")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Tweet {
  id          String    @id @default(uuid())
  content     String
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
  comments    Comment[]
  likes       Like[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}



model Comment {
  id          Int       @id @default(autoincrement())
  content     String
  tweet       Tweet     @relation(fields: [tweetId], references: [id])
  tweetId     String
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Like {
  id          Int       @id @default(autoincrement())
  tweet       Tweet     @relation(fields: [tweetId], references: [id])
  tweetId     String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime  @default(now())

  @@unique([tweetId, userId])
}


model Follow {
  id            Int       @id @default(autoincrement())
    
  follower      User      @relation("Following", fields: [followerId], references: [id])
  followerId    String
  
  following     User      @relation("Follower", fields: [followingId], references: [id])
  followingId   String
  createdAt     DateTime  @default(now())

  @@unique([followerId, followingId])
}
